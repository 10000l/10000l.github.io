import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-C9BeCxEA.js";const t="/assets/2-1-2tSlZSHV.png",i="/assets/2-2-Bgov8RBK.png",c="/assets/2-3-BC9eEzEu.png",o="/assets/2-4-DyCQaGke.png",p={},l=e(`<h2 id="xtp逐笔数据结构体字段说明" tabindex="-1"><a class="header-anchor" href="#xtp逐笔数据结构体字段说明"><span>XTP逐笔数据结构体字段说明</span></a></h2><h3 id="一、-逐笔数据结构体" tabindex="-1"><a class="header-anchor" href="#一、-逐笔数据结构体"><span>一、 逐笔数据结构体</span></a></h3><p>QuoteAPI中的逐笔数据结构体。 代码如下：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">///逐笔委托</span>
<span class="token keyword">struct</span> <span class="token class-name">XTPTickByTickEntrust</span> <span class="token punctuation">{</span>
    <span class="token comment">///频道代码</span>
    <span class="token keyword">int32_t</span> channel_no<span class="token punctuation">;</span>
    <span class="token comment">///SH: 委托序号(委托单独编号, 同一channel_no内连续)</span>
    <span class="token comment">///SZ: 委托序号(委托成交统一编号, 同一channel_no内连续)</span>
    <span class="token keyword">int64_t</span> seq<span class="token punctuation">;</span>
    <span class="token comment">///委托价格</span>
    <span class="token keyword">double</span>  price<span class="token punctuation">;</span>
    <span class="token comment">///SH: 剩余委托数量(balance)</span>
    <span class="token comment">///SZ: 委托数量</span>
    <span class="token keyword">int64_t</span> qty<span class="token punctuation">;</span>
    <span class="token comment">///SH: &#39;B&#39;:买; &#39;S&#39;:卖</span>
    <span class="token comment">///SZ: &#39;1&#39;:买; &#39;2&#39;:卖; &#39;G&#39;:借入; &#39;F&#39;:出借</span>
    <span class="token keyword">char</span>  side<span class="token punctuation">;</span>
    <span class="token comment">///SH: &#39;A&#39;: 增加; &#39;D&#39;: 删除</span>
    <span class="token comment">///SZ: 订单类别: &#39;1&#39;: 市价; &#39;2&#39;: 限价; &#39;U&#39;: 本方最优</span>
    <span class="token keyword">char</span> ord_type<span class="token punctuation">;</span>
    <span class="token comment">///SH: 原始订单号</span>
    <span class="token comment">///SZ: 无意义</span>
    <span class="token keyword">int64_t</span> order_no<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">///逐笔成交</span>
<span class="token keyword">struct</span> <span class="token class-name">XTPTickByTickTrade</span> <span class="token punctuation">{</span>
    <span class="token comment">///频道代码</span>
    <span class="token keyword">int32_t</span> channel_no<span class="token punctuation">;</span>
    <span class="token comment">///SH: 成交序号(成交单独编号, 同一channel_no内连续)</span>
    <span class="token comment">///SZ: 成交序号(委托成交统一编号, 同一channel_no内连续)</span>
    <span class="token keyword">int64_t</span> seq<span class="token punctuation">;</span>
    <span class="token comment">///成交价格</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>
    <span class="token comment">///成交量</span>
    <span class="token keyword">int64_t</span> qty<span class="token punctuation">;</span>
    <span class="token comment">///成交金额(仅适用上交所)</span>
    <span class="token keyword">double</span> money<span class="token punctuation">;</span>
    <span class="token comment">///买方订单号</span>
    <span class="token keyword">int64_t</span> bid_no<span class="token punctuation">;</span>
    <span class="token comment">///卖方订单号</span>
    <span class="token keyword">int64_t</span> ask_no<span class="token punctuation">;</span>
    <span class="token comment">/// SH: 内外盘标识(&#39;B&#39;:主动买; &#39;S&#39;:主动卖; &#39;N&#39;:未知)</span>
    <span class="token comment">/// SZ: 成交标识(&#39;4&#39;:撤; &#39;F&#39;:成交)</span>
    <span class="token keyword">char</span> trade_flag<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">///逐笔状态订单</span>
<span class="token keyword">struct</span> <span class="token class-name">XTPTickByTickStatus</span> <span class="token punctuation">{</span>
    <span class="token comment">///频道代码</span>
    <span class="token keyword">int32_t</span> channel_no<span class="token punctuation">;</span>
    <span class="token comment">///同一channel_no内连续</span>
    <span class="token keyword">int64_t</span> seq<span class="token punctuation">;</span>
    <span class="token comment">///状态信息</span>
    <span class="token keyword">char</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">///逐笔数据信息</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">XTPTickByTickStruct</span> <span class="token punctuation">{</span>
    <span class="token comment">///交易所代码</span>
    XTP_EXCHANGE_TYPE exchange_id<span class="token punctuation">;</span>
    <span class="token comment">///合约代码（不包含交易所信息），不带空格，以&#39;\\0&#39;结尾</span>
    <span class="token keyword">char</span> ticker<span class="token punctuation">[</span>XTP_TICKER_LEN<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">/// SH: 业务序号（委托成交统一编号，同一个channel_no内连续，此seq区别于联合体内的seq，channel_no等同于联合体内的channel_no）</span>
    <span class="token comment">/// SZ: 无意义</span>
    <span class="token keyword">int64_t</span> seq<span class="token punctuation">;</span>
    <span class="token comment">///委托时间 or 成交时间</span>
    <span class="token keyword">int64_t</span> data_time<span class="token punctuation">;</span>
    <span class="token comment">///委托 or 成交</span>
    XTP_TBT_TYPE type<span class="token punctuation">;</span>

    <span class="token keyword">union</span> <span class="token punctuation">{</span>
        XTPTickByTickEntrust entrust<span class="token punctuation">;</span>
        XTPTickByTickTrade     trade<span class="token punctuation">;</span>
        XTPTickByTickStatus    state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> XTPTBT<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、-逐笔数据结构体的字段对应关系" tabindex="-1"><a class="header-anchor" href="#二、-逐笔数据结构体的字段对应关系"><span>二、 逐笔数据结构体的字段对应关系</span></a></h3><h4 id="_1-逐笔委托结构体字段" tabindex="-1"><a class="header-anchor" href="#_1-逐笔委托结构体字段"><span>1.逐笔委托结构体字段</span></a></h4><figure><img src="`+t+'" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure><p><strong>channel_no字段</strong>：逐笔委托结构体的channel_no字段对应上交所的Channel字段以及深交所的ChannelNo字段，均表示逐笔委托的频道代码；在沪深交易所中，同一证券当天的频道代码是固定的，逐笔委托数据和逐笔成交数据均在这个频道中，因而有：XTPTickByTickEntrust.channel_no = XTPTickByTickTrade.channel_no。</p><p><strong>seq字段</strong>：逐笔委托结构体的seq字段在上交所对应OrderIndex字段表示委托序号，上交所中委托序号具有单独的序号；而在深交所对应ApplSeqNum字段代表委托序号，深交所中同一频道下的委托序号和成交序号共用一套序号。</p><p><strong>price字段</strong>：逐笔委托结构体的price字段在上交对应OrderPrice字段，深交所对应Price字段，均表示逐笔委托价格。</p><p><strong>qty字段</strong>：逐笔委托结构体的qty字段在上交所对应Balance字段，代表的是经过一次成交撮合后剩余数量，即XTPTickByTickEntrust.qty = 原始订单量 - 对应的逐笔成交量XTPTickByTickTrade.qty，当某一个订单经过一次撮合全部成交的话，是不会有对应逐笔委托数据的，只会有逐笔成交数据；而在深交所中对应OrderQt字段，表示逐笔委托的委托数量，深交所中的逐笔委托量大于等于对应的逐笔成交量即：XTPTickByTickEntrust.qty &gt;= XTPTickByTickTrade.qty。</p><p><strong>side字段</strong>：逐笔委托结构体的side字段在上交所中对应OrderBSFlag字段，表示&#39;B&#39;:买和&#39;S&#39;:卖；在深交所中对应Side字段，不仅表示&#39;B&#39;:买和&#39;S&#39;:卖，还可以表示&#39;G&#39;:借入和&#39;F&#39;:出借，对应转融通业务的借入申报和出借申报。</p><p><strong>ord_type字段</strong>：逐笔委托结构体的ord_type字段在上交所中对应OrderType字段，表示订单类型：&#39;A&#39;: 增加和&#39;D&#39;: 删除委托订单；在深交所则对应OrdType字段，表示订单类别: &#39;1&#39;: 市价; &#39;2&#39;: 限价; &#39;U&#39;: 本方最优。</p><p><strong>order_no字段</strong>：order_no字段在深交所中没有相对应的字段，仅在上交所中对应逐笔委托类数据中的OrderNO字段，表示原始订单号，与逐笔成交中买方订单号bid_no字段或卖方订单号ask_no字段相对应。当逐笔委托为撤单时，该逐笔委托订单的order_no字段与需要被撤销的逐笔委托订单中的order_no字段数据相同。</p><h4 id="_2-逐笔成交结构体字段" tabindex="-1"><a class="header-anchor" href="#_2-逐笔成交结构体字段"><span>2.逐笔成交结构体字段</span></a></h4><figure><img src="'+i+'" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure><p><strong>channel_no字段</strong>：逐笔成交结构体的channel_no字段对应上交所的TradeChannel字段以及深交所的ChannelNo字段，均表示逐笔成交的频道代码；在沪深交易所中，同一证券当天的频道代码是固定的，逐笔委托数据和逐笔成交数据均在这个频道中，因而有：XTPTickByTickEntrust.channel_no = XTPTickByTickTrade.channel_no。</p><p><strong>seq字段</strong>：逐笔成交结构体的seq字段在上交所对应TradeIndex字段表示成交序号，上交所中成交序号具有单独的序号；而在深交所对应ApplSeqNum字段也代表成交序号，但是深交所中同一频道下的委托序号和成交序号共用一套序号。</p><p><strong>price字段</strong>：逐笔成交结构体的price字段在上交对应TradePrice字段，深交所对应LastPx字段，均表示逐笔成交价格。</p><p><strong>qty字段</strong>：逐笔成交结构体的qty字段对应上交所的TradeQty字段以及深交所中的LastQty字段，表示逐笔成交的成交数量。</p><p><strong>money字段</strong>：逐笔成交结构体的money字段在上交所中对应TradeMoney字段，表示逐笔成交的金额；深交所中无意义，深交所中计算逐笔成交的金额计算公式：price × qty。</p><p><strong>bid_no字段</strong>：逐笔成交结构体中的bid_no字段在上交所中对应TradeBuyNo字段，表示买方订单号，与逐笔委托order_no字段相对应；在深交所中对应BidApplSeqNum字段，表示买委托索引，与表示卖委托索引的ask_no字段相对应，二者均与字段委托序号seq相关联，seq在同一频道中是按照时间顺序自增且唯一的，因此若bid_no的序号小于ask_no的序号，则表示该逐笔成交为主动卖，反之则表明该逐笔成交为主动买。当逐笔成交为撤单时，则bid_no和ask_no的序号其中一个为0。</p><p><strong>ask_no字段</strong>：逐笔成交结构体中的ask_no字段在上交所中对应TradeSellNo字段，表示卖方订单号，与逐笔委托中的order_no字段相对应；在深交所中对应OfferApplSeqNum字段，表示卖委托索引，与表示买委托索引的ask_no字段相对应，二者均与字段委托序号seq相关联，seq在同一频道中是按照时间顺序自增且唯一的，因此若bid_no的序号小于ask_no的序号，则表示该逐笔成交为主动卖，反之则表明该逐笔成交为主动买。当逐笔成交为撤单时，则bid_no和ask_no的序号其中一个为0。</p><p><strong>trade_flag字段</strong>：逐笔成交结构体的trade_flag字段在上交所对应TradeBSFlag字段，表示内外盘标识(&#39;B&#39;:主动买; &#39;S&#39;:主动卖; &#39;N&#39;:未知)；而在深交所中则对应ExecType字段，表示成交标识(&#39;4&#39;:撤; &#39;F&#39;:成交)，深交所中逐笔成交的主动买和卖主要通过bid_no字段和ask_no字段来判断。</p><h4 id="_3-逐笔状态订单结构体字段" tabindex="-1"><a class="header-anchor" href="#_3-逐笔状态订单结构体字段"><span>3.逐笔状态订单结构体字段</span></a></h4><figure><img src="'+c+'" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure><p><strong>逐笔状态订单数据仅在上交所有意义，且逐笔合并类数据中的字段 Type = S 即逐笔类型为产品状态订单；深交所不存在逐笔状态订单数据</strong></p><p><strong>channel_no字段</strong>：逐笔状态订单结构体的channel_no字段对应上交所逐笔合并类数据的Channel字段，表示频道代码。</p><p><strong>seq字段</strong>：逐笔状态订单结构体的seq字段对应上交所逐笔合并类数据的BizIndex字段，表示业务序列号，从 1 开始，在同一频道内是连续的。上交所中的逐笔委托消息与逐笔成交消息属于不同的消息，没有固定的到达先后次序关系，而该seq字段是逐笔委托消息和逐笔成交消息合并后的连续编号，故可以通过seq字段判断逐笔委托消息与逐笔成交消息产生的先后顺序。</p><p><strong>flag字段</strong>：逐笔状态订单结构体的flag字段对应上交所逐笔合并类数据的TickBSFlag字段，表示处于产品状态订单下的状态信息(START：启动；OCALL:开市集合竞价;TRADE:连续自动撮;SUSP:停牌;CCALL:收盘集合竞价;CLOSE:闭市;ENDTR:交易结束)。</p><h4 id="_4-逐笔数据信息结构体字段" tabindex="-1"><a class="header-anchor" href="#_4-逐笔数据信息结构体字段"><span>4.逐笔数据信息结构体字段</span></a></h4><figure><img src="'+o+'" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure><p><strong>ticker字段</strong>：上交所中，union中的逐笔类型为逐笔委托、逐笔成交以及逐笔状态订单时，ticker字段均对应SecurityID字段，表示证券代码；深交所中，union中的逐笔类型为逐笔委托以及逐笔成交时，ticker字段均对应SecurityID字段，也表示证券代码，深交所不存在逐笔状态订单数据。</p><p><strong>seq字段</strong>：逐笔数据信息的seq字段在上交所对应逐笔数据中的BizIndex字段，表示业务序列号，从 1 开始，在同一频道内是连续的，上交所中的逐笔委托消息与逐笔成交消息属于不同的消息，没有固定的到达先后次序关系，而该seq字段是逐笔委托消息和逐笔成交消息合并后的连续编号，故可以通过seq字段判断逐笔委托消息与逐笔成交消息产生的先后顺序；深交所中该字段无意义。</p><p><strong>data_time字段</strong>：上交所中，union中的逐笔类型为逐笔委托时，data_time字段对应者委托时间OrderTime字段，为逐笔成交时，data_time字段对应者成交时间TradeTime字段，为逐笔状态订单时，data_time字段对应TickTime字段，表示订单时间；深交所中，union中的逐笔类型为逐笔委托或者逐笔成交时，data_time字段均对应TransactTime字段，表示逐笔委托时间或者逐笔成交时间，深交所不存在逐笔状态订单数据。</p><p><strong>union联合体</strong>：在上交所中，逐笔类型可以为逐笔委托XTPTickByTickEntrust、逐笔成交XTPTickByTickTrade以及逐笔状态订单XTPTickByTickStatus；深交所中，逐笔类型仅能为逐笔委托XTPTickByTickEntrust和逐笔成交XTPTickByTickTrade，不存在逐笔状态订单类型。</p>',39),r=[l];function d(u,m){return s(),a("div",null,r)}const _=n(p,[["render",d],["__file","XTP逐笔数据结构体字段说明.html.vue"]]),T=JSON.parse('{"path":"/docs/XTP%E9%80%90%E7%AC%94%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E/XTP%E9%80%90%E7%AC%94%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E.html","title":"","lang":"zh-CN","frontmatter":{"description":"XTP逐笔数据结构体字段说明 一、 逐笔数据结构体 QuoteAPI中的逐笔数据结构体。 代码如下： 二、 逐笔数据结构体的字段对应关系 1.逐笔委托结构体字段 avataravatar channel_no字段：逐笔委托结构体的channel_no字段对应上交所的Channel字段以及深交所的ChannelNo字段，均表示逐笔委托的频道代码；在沪深交...","head":[["meta",{"property":"og:url","content":"https://10000l.github.io/docs/XTP%E9%80%90%E7%AC%94%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E/XTP%E9%80%90%E7%AC%94%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%93%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E.html"}],["meta",{"property":"og:site_name","content":"Docs Demo"}],["meta",{"property":"og:description","content":"XTP逐笔数据结构体字段说明 一、 逐笔数据结构体 QuoteAPI中的逐笔数据结构体。 代码如下： 二、 逐笔数据结构体的字段对应关系 1.逐笔委托结构体字段 avataravatar channel_no字段：逐笔委托结构体的channel_no字段对应上交所的Channel字段以及深交所的ChannelNo字段，均表示逐笔委托的频道代码；在沪深交..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-03T15:52:56.000Z"}],["meta",{"property":"article:author","content":"xtp_master"}],["meta",{"property":"article:modified_time","content":"2024-06-03T15:52:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-03T15:52:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xtp_master\\",\\"url\\":\\"https://xtp.zts.com.cn\\"}]}"]]},"headers":[{"level":2,"title":"XTP逐笔数据结构体字段说明","slug":"xtp逐笔数据结构体字段说明","link":"#xtp逐笔数据结构体字段说明","children":[{"level":3,"title":"一、 逐笔数据结构体","slug":"一、-逐笔数据结构体","link":"#一、-逐笔数据结构体","children":[]},{"level":3,"title":"二、 逐笔数据结构体的字段对应关系","slug":"二、-逐笔数据结构体的字段对应关系","link":"#二、-逐笔数据结构体的字段对应关系","children":[]}]}],"git":{"createdTime":1717429976000,"updatedTime":1717429976000,"contributors":[{"name":"linxiaolx-lx","email":"1247776138@qq.com","commits":1}]},"readingTime":{"minutes":8.91,"words":2672},"filePathRelative":"docs/XTP逐笔数据结构体字段说明/XTP逐笔数据结构体字段说明.md","localizedDate":"2024年6月3日","autoDesc":true}');export{_ as comp,T as data};
