import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as e,c,b as a,a as i,w as l,d as n,e as s,f as u}from"./app-C9BeCxEA.js";const r={},k=n("h1",{id:"xtp报单接口示例代码文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#xtp报单接口示例代码文档"},[n("span",null,"XTP报单接口示例代码文档")])],-1),d=s('<ul><li><a href="#xtp%E5%90%84%E7%A7%8D%E4%B8%9A%E5%8A%A1%E6%8A%A5%E5%8D%95">XTP各种业务报单</a><ul><li><a href="#1%E6%99%AE%E9%80%9A%E8%82%A1%E7%A5%A8%E4%BA%A4%E6%98%93%E4%B8%8B%E5%8D%95%E7%A4%BA%E4%BE%8B">1.普通股票交易下单示例</a></li><li><a href="#2%E6%96%B0%E8%82%A1%E7%94%B3%E8%B4%AD%E4%BA%A4%E6%98%93%E4%B8%8B%E5%8D%95%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B">2.新股申购交易下单代码示例</a></li><li><a href="#3%E9%85%8D%E8%82%A1%E6%88%96%E8%80%85%E9%85%8D%E5%80%BA%E4%B8%8B%E5%8D%95%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B">3.配股或者配债下单代码示例</a></li><li><a href="#4%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD%E4%B8%8B%E5%8D%95%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B">4.国债逆回购下单代码示例</a></li><li><a href="#5etf%E7%94%B3%E8%B5%8E%E4%B8%8B%E5%8D%95%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B">5.ETF申赎下单代码示例</a><ul><li><a href="#1-%E7%94%B3%E8%B4%AD">(1) 申购</a></li><li><a href="#2-%E8%B5%8E%E5%9B%9E">(2) 赎回</a></li></ul></li><li><a href="#6%E4%BF%A1%E7%94%A8%E4%B8%9A%E5%8A%A1%E4%BA%A4%E6%98%93%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81">6.信用业务交易示例代码</a><ul><li><a href="#1-%E8%9E%8D%E8%B5%84%E4%B9%B0%E5%85%A5">(1) 融资买入</a></li><li><a href="#2-%E8%9E%8D%E5%88%B8%E5%8D%96%E5%87%BA">(2) 融券卖出</a></li><li><a href="#3-%E5%8D%96%E5%88%B8%E8%BF%98%E6%AC%BE">(3) 卖券还款</a></li><li><a href="#4-%E4%B9%B0%E5%88%B8%E8%BF%98%E5%88%B8">(4) 买券还券</a></li><li><a href="#5-%E7%8E%B0%E5%88%B8%E8%BF%98%E5%88%B8">(5) 现券还券</a></li><li><a href="#6-%E4%BD%99%E5%88%B8%E5%88%92%E8%BD%AC">(6) 余券划转</a></li><li><a href="#7-%E6%8B%85%E4%BF%9D%E5%93%81%E8%BD%AC%E5%85%A5">(7) 担保品转入</a></li><li><a href="#8-%E6%8B%85%E4%BF%9D%E5%93%81%E8%BD%AC%E5%87%BA">(8) 担保品转出</a></li><li><a href="#9-%E6%8B%85%E4%BF%9D%E5%93%81%E4%B9%B0">(9) 担保品买</a></li><li><a href="#10-%E6%8B%85%E4%BF%9D%E5%93%81%E5%8D%96">(10) 担保品卖</a></li><li><a href="#11-%E6%8C%87%E5%AE%9A%E5%8D%96%E5%88%B8%E8%BF%98%E6%81%AF">(11) 指定卖券还息</a></li><li><a href="#12-%E7%8E%B0%E9%87%91%E8%BF%98%E6%AC%BE">(12) 现金还款</a></li><li><a href="#13-%E6%8C%87%E5%AE%9A%E7%8E%B0%E9%87%91%E8%BF%98%E6%81%AF">(13) 指定现金还息</a></li></ul></li><li><a href="#7-%E6%9C%9F%E6%9D%83%E4%B8%9A%E5%8A%A1%E4%BA%A4%E6%98%93%E7%9B%B8%E5%85%B3%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81">7. 期权业务交易相关示例代码</a><ul><li><a href="#1-%E6%9C%9F%E6%9D%83%E4%B8%9A%E5%8A%A1">(1) 期权业务</a></li><li><a href="#2-%E8%A1%8C%E6%9D%83">(2) 行权</a></li><li><a href="#3-%E7%BB%84%E5%90%88%E7%AD%96%E7%95%A5%E7%9A%84%E5%90%88%E5%B9%B6">(3) 组合策略的合并</a></li><li><a href="#4-%E7%BB%84%E5%90%88%E7%AD%96%E7%95%A5%E7%9A%84%E6%8B%86%E5%88%86">(4) 组合策略的拆分</a></li><li><a href="#5-%E5%90%88%E5%B9%B6%E8%A1%8C%E6%9D%83">(5) 合并行权</a></li></ul></li><li><a href="#8%E5%80%BA%E8%BD%AC%E8%82%A1%E4%B8%8B%E5%8D%95%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B">8.债转股下单代码示例</a></li></ul></li></ul>',1),m=s(`<h2 id="xtp各种业务报单" tabindex="-1"><a class="header-anchor" href="#xtp各种业务报单"><span>XTP各种业务报单</span></a></h2><h3 id="_1-普通股票交易下单示例" tabindex="-1"><a class="header-anchor" href="#_1-普通股票交易下单示例"><span>1.普通股票交易下单示例</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi ;//交易api的创建示例在此忽略
uint64_t session_id_ ;//登录成功后得到的会话
*/</span>
<span class="token keyword">void</span> <span class="token function">ordinaryInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要交易的股票代码，用户自行更改</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_CASH<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_CASH为普通股票下单业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_BUY<span class="token punctuation">;</span><span class="token comment">//买，根据买卖方向进行修改</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">12.51</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//买卖股票的委托数量,需参考交易规则</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//=0说明下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-新股申购交易下单代码示例" tabindex="-1"><a class="header-anchor" href="#_2-新股申购交易下单代码示例"><span>2.新股申购交易下单代码示例</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>

<span class="token keyword">void</span> <span class="token function">iposInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;303001&quot;</span><span class="token punctuation">;</span><span class="token comment">//新股申购的新股代码，可参考QueryIPOInfoList()查询结果</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_IPOS<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_IPOS为新股申购的业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_BUY<span class="token punctuation">;</span><span class="token comment">//买</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型，仅能使用限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span><span class="token comment">//申购数量，用户可根据实际可申购数量来填写，可参考QueryIPOQuotaInfo()查询结果，对于申购单位：深证500股，上证1000股，科创板500，委托数量必须是这些单位的整数倍</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//=0说明下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-配股或者配债下单代码示例" tabindex="-1"><a class="header-anchor" href="#_3-配股或者配债下单代码示例"><span>3.配股或者配债下单代码示例</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>

<span class="token keyword">void</span> <span class="token function">allotmentInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;380033&quot;</span><span class="token punctuation">;</span><span class="token comment">//配股或者配债代码，可参考QueryPosition()查询结果</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_ALLOTMENT<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_ALLOTMENT为配股业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_BUY<span class="token punctuation">;</span><span class="token comment">//买卖类型必须是买</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型，仅能使用限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token comment">//配售股票或者债券的委托数量，单位是股或者张，用户可根据QueryPosition()接口查询的结果来填写</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-国债逆回购下单代码示例" tabindex="-1"><a class="header-anchor" href="#_4-国债逆回购下单代码示例"><span>4.国债逆回购下单代码示例</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>

<span class="token keyword">void</span> <span class="token function">repoInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;131810&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要交易的股票代码，用户自行更改</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_REPO<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_REPO为国债逆回购业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_SELL<span class="token punctuation">;</span><span class="token comment">//卖</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型，仅能使用限价</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">1.995</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token comment">//国债逆回购的委托数量，单位为张，1手=10张，需参考交易所规则，上交所和深交所都是10张的整数倍，单笔最大申报数量不得超过1亿张。</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-etf申赎下单代码示例" tabindex="-1"><a class="header-anchor" href="#_5-etf申赎下单代码示例"><span>5.ETF申赎下单代码示例</span></a></h3><h4 id="_1-申购" tabindex="-1"><a class="header-anchor" href="#_1-申购"><span>(1) 申购</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>

<span class="token keyword">void</span> <span class="token function">ETFInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SH_A<span class="token punctuation">;</span><span class="token comment">//市场类型：上证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;515880&quot;</span><span class="token punctuation">;</span><span class="token comment">//ETF买卖代码，XTP内统一使用买卖代码，不使用申赎代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_ETF<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_ETF为ETF申赎业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_PURCHASE<span class="token punctuation">;</span><span class="token comment">//申购</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span><span class="token comment">//委托数量为最小申赎单位的倍数，可以参考QueryETF()的查询结果填写</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-赎回" tabindex="-1"><a class="header-anchor" href="#_2-赎回"><span>(2) 赎回</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>

<span class="token keyword">void</span> <span class="token function">ETFInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SH_A<span class="token punctuation">;</span><span class="token comment">//市场类型：上证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;515880&quot;</span><span class="token punctuation">;</span><span class="token comment">//ETF买卖代码，XTP内统一使用买卖代码，不使用申赎代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_ETF<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_ETF为ETF申赎业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_REDEMPTION<span class="token punctuation">;</span><span class="token comment">//赎回</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span><span class="token comment">//委托数量为最小申赎单位的倍数，可以参考QueryETF()的查询结果填写</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-信用业务交易示例代码" tabindex="-1"><a class="header-anchor" href="#_6-信用业务交易示例代码"><span>6.信用业务交易示例代码</span></a></h3><h4 id="_1-融资买入" tabindex="-1"><a class="header-anchor" href="#_1-融资买入"><span>(1) 融资买入</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>
<span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要交易的股票代码，用户自行更改</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_MARGIN_TRADE<span class="token punctuation">;</span><span class="token comment">//融资买入</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">19.05</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//数量，具体参考交易所规则，融资买入的最大数量需满足维持担保品比例，可参考QueryCreditFundInfo查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-融券卖出" tabindex="-1"><a class="header-anchor" href="#_2-融券卖出"><span>(2) 融券卖出</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要交易的股票代码，用户自行更改，可参考QueryCreditTickerAssignInfo()查询结果</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_SHORT_SELL<span class="token punctuation">;</span><span class="token comment">//融券卖出</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">19.05</span><span class="token punctuation">;</span><span class="token comment">//价格不得低于最新价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//数量，请参照交易规则，不可为零散股，剩余可融券数量可参考QueryCreditTickerAssignInfo()查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-卖券还款" tabindex="-1"><a class="header-anchor" href="#_3-卖券还款"><span>(3) 卖券还款</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要交易的股票代码，用户自行更改</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_REPAY_MARGIN<span class="token punctuation">;</span><span class="token comment">//卖券还款</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型：限价，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">19.05</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//委托数量，具体参考交易所规则，最大数量可参考QueryPosition()查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-买券还券" tabindex="-1"><a class="header-anchor" href="#_4-买券还券"><span>(4) 买券还券</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_REPAY_STOCK<span class="token punctuation">;</span><span class="token comment">//买券还券</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">19.05</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//委托数量，具体参考交易所规则</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-现券还券" tabindex="-1"><a class="header-anchor" href="#_5-现券还券"><span>(5) 现券还券</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要还券的股票代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_STOCK_REPAY_STOCK<span class="token punctuation">;</span><span class="token comment">//现券还券</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">//数量，可以零散股。融券负债可还券数量，不包含今天融券卖出的数量，可参考QueryCreditTickerDebtInfo()查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-余券划转" tabindex="-1"><a class="header-anchor" href="#_6-余券划转"><span>(6) 余券划转</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;000001&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要划转的余券代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_SURSTK_TRANS<span class="token punctuation">;</span><span class="token comment">//余券划转</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span><span class="token comment">//可划转数量，可参考QueryMulCreditExcessStock()查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-担保品转入" tabindex="-1"><a class="header-anchor" href="#_7-担保品转入"><span>(7) 担保品转入</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;300860&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要转入的股票代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_GRTSTK_TRANSIN<span class="token punctuation">;</span><span class="token comment">//担保品转入</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">//数量，需用户自行查询现货账户内的持仓数量</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-担保品转出" tabindex="-1"><a class="header-anchor" href="#_8-担保品转出"><span>(8) 担保品转出</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;300860&quot;</span><span class="token punctuation">;</span><span class="token comment">//持仓里的证券代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_GRTSTK_TRANSOUT<span class="token punctuation">;</span><span class="token comment">//担保品转出</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">//数量，不可超过可卖持仓的数量，可参考QueryPosition()查询结果填写</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-担保品买" tabindex="-1"><a class="header-anchor" href="#_9-担保品买"><span>(9) 担保品买</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;159919&quot;</span><span class="token punctuation">;</span><span class="token comment">//股票代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_BUY<span class="token punctuation">;</span><span class="token comment">//买</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">5.721</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//委托数量，具体参考交易所规则</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-担保品卖" tabindex="-1"><a class="header-anchor" href="#_10-担保品卖"><span>(10) 担保品卖</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;159919&quot;</span><span class="token punctuation">;</span><span class="token comment">//持仓里的证券代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_SELL<span class="token punctuation">;</span><span class="token comment">//卖</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">5.721</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//委托数量，具体参考交易所规则，不可超过可卖持仓的数量，可参考QueryPosition()查询结果填写</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_11-指定卖券还息" tabindex="-1"><a class="header-anchor" href="#_11-指定卖券还息"><span>(11) 指定卖券还息</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">marginInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;159919&quot;</span><span class="token punctuation">;</span><span class="token comment">//持仓里的证券代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_MARGIN<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_MARGIN为融资融券业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_REPAY_MARGIN<span class="token punctuation">;</span><span class="token comment">//卖券还款</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">5.721</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//数量，不可超过可卖持仓的数量，可参考QueryPosition()查询结果填写</span>
    std<span class="token double-colon punctuation">::</span>string str_debt_id <span class="token operator">=</span> <span class="token string">&quot;202111020012000000015&quot;</span><span class="token punctuation">;</span><span class="token comment">//负债信息的合约编码，可自行修改</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">CreditSellStockRepayDebtInterestFee</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> str_debt_id<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-现金还款" tabindex="-1"><a class="header-anchor" href="#_12-现金还款"><span>(12) 现金还款</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">readyCreditCashRepay</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">double</span> amount <span class="token operator">=</span> <span class="token number">60000.0</span><span class="token punctuation">;</span><span class="token comment">//申请还款金额，待还资金可参考QueryCreditAssetDebtInfo()查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">CreditCashRepay</span><span class="token punctuation">(</span>amount<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//现金直接还款请求</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_13-指定现金还息" tabindex="-1"><a class="header-anchor" href="#_13-指定现金还息"><span>(13) 指定现金还息</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">readyCreditCashRepayDebtInterestFee</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>string debt_id <span class="token operator">=</span> <span class="token string">&quot;201903110005100000175&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要还息的负债合约编号</span>
    <span class="token keyword">double</span> amount <span class="token operator">=</span> <span class="token number">60000.0</span><span class="token punctuation">;</span><span class="token comment">//现金还息的金额，可参考QueryCreditDebtInfo()查询结果</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">CreditCashRepayDebtInterestFee</span><span class="token punctuation">(</span>debt_id<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amount<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//现金还指定负债合约息费请求</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-期权业务交易相关示例代码" tabindex="-1"><a class="header-anchor" href="#_7-期权业务交易相关示例代码"><span>7. 期权业务交易相关示例代码</span></a></h3><h4 id="_1-期权业务" tabindex="-1"><a class="header-anchor" href="#_1-期权业务"><span>(1) 期权业务</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>
<span class="token keyword">void</span> <span class="token function">optInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;91003521&quot;</span><span class="token punctuation">;</span><span class="token comment">//合约代码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_OPTION<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_OPTION为期权业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_BUY<span class="token punctuation">;</span><span class="token comment">//买</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_OPEN<span class="token punctuation">;</span><span class="token comment">//开</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型为限价，可修改为其他类型，具体参考头文件注释</span>
    order_info<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">2.5093</span><span class="token punctuation">;</span><span class="token comment">//价格，可参考行情修改</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//数量，具体参考交易所规则</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-行权" tabindex="-1"><a class="header-anchor" href="#_2-行权"><span>(2) 行权</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>
<span class="token keyword">void</span> <span class="token function">optInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟证券代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;91003521&quot;</span><span class="token punctuation">;</span><span class="token comment">//当日日期与该合约行权日一样，才能做行权</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_EXECUTE<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_EXECUTE为行权业务类型</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//数量,用户可自行修改</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-组合策略的合并" tabindex="-1"><a class="header-anchor" href="#_3-组合策略的合并"><span>(3) 组合策略的合并</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>
<span class="token keyword">void</span> <span class="token function">optInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOptCombOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOptCombOrderInsertInfo 为组合策略下单的结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOptCombOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟腿的合约代码所属的交易所相一致)</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//合并的合约数目，用户自行修改</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_OPTION_COMBINE<span class="token punctuation">;</span><span class="token comment">//组合策略业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_OPT_COMBINE<span class="token punctuation">;</span><span class="token comment">//合并</span>
    std<span class="token double-colon punctuation">::</span>string std_str_strategy_id <span class="token operator">=</span> <span class="token string">&quot;CNSJC&quot;</span><span class="token punctuation">;</span><span class="token comment">//策略代码类型</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>strategy_id<span class="token punctuation">,</span> XTP_STRATEGY_ID_LEN<span class="token punctuation">,</span> std_str_strategy_id<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_STRATEGY_ID_LEN策略代码的存放长度</span>
    <span class="token comment">// 组合策略腿合约信息结构体，目前组合策略的合并只支持两条腿的合约代码合并</span>
    order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>num_legs <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//两个腿</span>
    std<span class="token double-colon punctuation">::</span>string std_str_ticker1 <span class="token operator">=</span> <span class="token string">&quot;91003521&quot;</span><span class="token punctuation">;</span><span class="token comment">//腿1的合约代码，用户自行修改</span>
    std<span class="token double-colon punctuation">::</span>string std_str_ticker2 <span class="token operator">=</span> <span class="token string">&quot;91003536&quot;</span><span class="token punctuation">;</span><span class="token comment">//腿2的合约代码，用户自行修改</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>leg_detail<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>leg_security_id<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> std_str_ticker1<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放合约代码的字符串长度</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>leg_detail<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>leg_security_id<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> std_str_ticker2<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOptionCombinedOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//组合策略下单接口</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
    <span class="token punctuation">{</span>
        XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-组合策略的拆分" tabindex="-1"><a class="header-anchor" href="#_4-组合策略的拆分"><span>(4) 组合策略的拆分</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>
<span class="token keyword">void</span> <span class="token function">optInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOptCombOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOptCombOrderInsertInfo 为组合策略下单的结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOptCombOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟腿的合约代码所属的交易所相一致)</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//要拆分的合约数量，可自行修改</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_OPTION_COMBINE<span class="token punctuation">;</span><span class="token comment">//组合策略业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_OPT_SPLIT<span class="token punctuation">;</span><span class="token comment">//拆分</span>
    std<span class="token double-colon punctuation">::</span>string std_str_comb_num <span class="token operator">=</span> <span class="token string">&quot;00B0R4JJOA000026&quot;</span><span class="token punctuation">;</span><span class="token comment">//要拆分的组合编码</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>comb_num<span class="token punctuation">,</span> XTP_SECONDARY_ORDER_ID_LEN<span class="token punctuation">,</span> std_str_comb_num<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_SECONDARY_ORDER_ID_LEN组合编码的字符串长度</span>
    std<span class="token double-colon punctuation">::</span>string std_str_strategy_id <span class="token operator">=</span> <span class="token string">&quot;CNSJC&quot;</span><span class="token punctuation">;</span><span class="token comment">//该组合的策略代码类型</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>strategy_id<span class="token punctuation">,</span> XTP_STRATEGY_ID_LEN<span class="token punctuation">,</span> std_str_strategy_id<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_STRATEGY_ID_LEN策略代码的存放长度</span>
    <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOptionCombinedOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//组合策略下单接口</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
    <span class="token punctuation">{</span>
        XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-合并行权" tabindex="-1"><a class="header-anchor" href="#_5-合并行权"><span>(5) 合并行权</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">optInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOptCombOrderInsertInfo order_info<span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOptCombOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟腿的合约代码所属的交易所相一致)</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//要合并行权的合约数量，可自行修改</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_EXECUTE_COMBINE<span class="token punctuation">;</span><span class="token comment">//行权合并的业务类型</span>
    std<span class="token double-colon punctuation">::</span>string std_str_strategy_id <span class="token operator">=</span> <span class="token string">&quot;exec&quot;</span><span class="token punctuation">;</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>strategy_id<span class="token punctuation">,</span> XTP_STRATEGY_ID_LEN<span class="token punctuation">,</span> std_str_strategy_id<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_STRATEGY_ID_LEN策略代码的存放长度</span>
    order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>num_legs <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//腿数目为2(目前最多只支持两条腿)</span>
    std<span class="token double-colon punctuation">::</span>string ticker1 <span class="token operator">=</span> <span class="token string">&quot;91003536&quot;</span><span class="token punctuation">;</span><span class="token comment">//腿1的合约代码，用户自行修改</span>
    std<span class="token double-colon punctuation">::</span>string ticker2 <span class="token operator">=</span> <span class="token string">&quot;91003521&quot;</span><span class="token punctuation">;</span><span class="token comment">//腿2的合约代码，用户自行修改</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>leg_detail<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>leg_security_id<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker1<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放合约代码的字符串长度</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>opt_comb_info<span class="token punctuation">.</span>leg_detail<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>leg_security_id<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker2<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOptionCombinedOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//组合策略下单接口</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
    <span class="token punctuation">{</span>
        XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-债转股下单代码示例" tabindex="-1"><a class="header-anchor" href="#_8-债转股下单代码示例"><span>8.债转股下单代码示例</span></a></h3>`,53),_=s(`<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/*XTP::API::TraderApi* pUserApi //交易api的创建示例在此忽略
uint64_t session_id_ //登录成功后得到的会话
*/</span>

<span class="token keyword">void</span> <span class="token function">bondSwapStockInsertOrder</span><span class="token punctuation">(</span>XTP<span class="token double-colon punctuation">::</span>API<span class="token double-colon punctuation">::</span>TraderApi<span class="token operator">*</span> pUserApi<span class="token punctuation">,</span> <span class="token keyword">uint64_t</span> session_id_<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    XTPOrderInsertInfo order_info<span class="token punctuation">;</span><span class="token comment">//XTPOrderInsertInfo 为下单参数结构体</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>XTPOrderInsertInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结构体初始化</span>
    <span class="token comment">//参数赋值</span>
    order_info<span class="token punctuation">.</span>market <span class="token operator">=</span> XTP_MKT_SZ_A<span class="token punctuation">;</span><span class="token comment">//市场类型：深证(跟可转债代码所属的交易所相一致)</span>
    std<span class="token double-colon punctuation">::</span>string ticker <span class="token operator">=</span> <span class="token string">&quot;380033&quot;</span><span class="token punctuation">;</span><span class="token comment">//需要进行债转股操作的可转债代码，可参考QueryPosition()查询结果以及QueryBondSwapStockInfo()查询结果</span>
    <span class="token function">strcpy_s</span><span class="token punctuation">(</span>order_info<span class="token punctuation">.</span>ticker<span class="token punctuation">,</span> XTP_TICKER_LEN<span class="token punctuation">,</span> ticker<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//XTP_TICKER_LEN:存放证券代码的字符串长度</span>
    order_info<span class="token punctuation">.</span>business_type <span class="token operator">=</span> XTP_BUSINESS_TYPE_BOND_SWAP_STOCK<span class="token punctuation">;</span><span class="token comment">//XTP_BUSINESS_TYPE_BOND_SWAP_STOCK为债转股业务类型</span>
    order_info<span class="token punctuation">.</span>side <span class="token operator">=</span> XTP_SIDE_SELL<span class="token punctuation">;</span><span class="token comment">//买卖类型必须是卖</span>
    order_info<span class="token punctuation">.</span>position_effect <span class="token operator">=</span> XTP_POSITION_EFFECT_INIT<span class="token punctuation">;</span><span class="token comment">//position_effect开平标志，除期权以外，都使用该值</span>
    order_info<span class="token punctuation">.</span>price_type <span class="token operator">=</span> XTP_PRICE_LIMIT<span class="token punctuation">;</span><span class="token comment">//价格类型使用限价</span>
    order_info<span class="token punctuation">.</span>quantity <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">//进行债转股操作的可转债的委托数量，单位是张，用户可根据QueryPosition()接口查询的结果以及QueryBondSwapStockInfo()查询结果来填写</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pUserApi <span class="token operator">&amp;&amp;</span> session_id_ <span class="token operator">!=</span><span class="token number">0</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">uint64_t</span> xtp_id <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">InsertOrder</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>order_info<span class="token punctuation">,</span> session_id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下单接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xtp_id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//下单发送失败</span>
        <span class="token punctuation">{</span>
            XTPRI <span class="token operator">*</span> error <span class="token operator">=</span> pUserApi<span class="token operator">-&gt;</span><span class="token function">GetApiLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取下单发送失败的错误码</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function v(b,f){const p=o("font");return e(),c("div",null,[k,a(" TOC "),d,a(" /TOC "),m,i(p,{color:"#FF0000"},{default:l(()=>[u("注意：债转股的报单不会影响持仓，服务器也不会校验持仓数量。超过可转债现有持仓数量的报单，可能会在晚间清算的时候失败。")]),_:1}),_])}const I=t(r,[["render",v],["__file","XTP报单接口示例代码文档.html.vue"]]),P=JSON.parse('{"path":"/docs/API_DOC_XTP%E6%8A%A5%E5%8D%95%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3/XTP%E6%8A%A5%E5%8D%95%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3.html","title":"XTP报单接口示例代码文档","lang":"zh-CN","frontmatter":{"description":"XTP报单接口示例代码文档 XTP各种业务报单 1.普通股票交易下单示例 2.新股申购交易下单代码示例 3.配股或者配债下单代码示例 4.国债逆回购下单代码示例 5.ETF申赎下单代码示例 (1) 申购 (2) 赎回 6.信用业务交易示例代码 (1) 融资买入 (2) 融券卖出 (3) 卖券还款 (4) 买券还券 (5) 现券还券 (6) 余券划转 (...","head":[["meta",{"property":"og:url","content":"https://10000l.github.io/docs/API_DOC_XTP%E6%8A%A5%E5%8D%95%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3/XTP%E6%8A%A5%E5%8D%95%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3.html"}],["meta",{"property":"og:site_name","content":"Docs Demo"}],["meta",{"property":"og:title","content":"XTP报单接口示例代码文档"}],["meta",{"property":"og:description","content":"XTP报单接口示例代码文档 XTP各种业务报单 1.普通股票交易下单示例 2.新股申购交易下单代码示例 3.配股或者配债下单代码示例 4.国债逆回购下单代码示例 5.ETF申赎下单代码示例 (1) 申购 (2) 赎回 6.信用业务交易示例代码 (1) 融资买入 (2) 融券卖出 (3) 卖券还款 (4) 买券还券 (5) 现券还券 (6) 余券划转 (..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-03T15:52:56.000Z"}],["meta",{"property":"article:author","content":"xtp_master"}],["meta",{"property":"article:modified_time","content":"2024-06-03T15:52:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"XTP报单接口示例代码文档\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-03T15:52:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xtp_master\\",\\"url\\":\\"https://xtp.zts.com.cn\\"}]}"]]},"headers":[{"level":2,"title":"XTP各种业务报单","slug":"xtp各种业务报单","link":"#xtp各种业务报单","children":[{"level":3,"title":"1.普通股票交易下单示例","slug":"_1-普通股票交易下单示例","link":"#_1-普通股票交易下单示例","children":[]},{"level":3,"title":"2.新股申购交易下单代码示例","slug":"_2-新股申购交易下单代码示例","link":"#_2-新股申购交易下单代码示例","children":[]},{"level":3,"title":"3.配股或者配债下单代码示例","slug":"_3-配股或者配债下单代码示例","link":"#_3-配股或者配债下单代码示例","children":[]},{"level":3,"title":"4.国债逆回购下单代码示例","slug":"_4-国债逆回购下单代码示例","link":"#_4-国债逆回购下单代码示例","children":[]},{"level":3,"title":"5.ETF申赎下单代码示例","slug":"_5-etf申赎下单代码示例","link":"#_5-etf申赎下单代码示例","children":[]},{"level":3,"title":"6.信用业务交易示例代码","slug":"_6-信用业务交易示例代码","link":"#_6-信用业务交易示例代码","children":[]},{"level":3,"title":"7. 期权业务交易相关示例代码","slug":"_7-期权业务交易相关示例代码","link":"#_7-期权业务交易相关示例代码","children":[]},{"level":3,"title":"8.债转股下单代码示例","slug":"_8-债转股下单代码示例","link":"#_8-债转股下单代码示例","children":[]}]}],"git":{"createdTime":1717429976000,"updatedTime":1717429976000,"contributors":[{"name":"linxiaolx-lx","email":"1247776138@qq.com","commits":1}]},"readingTime":{"minutes":21.23,"words":6368},"filePathRelative":"docs/API_DOC_XTP报单接口示例代码文档/XTP报单接口示例代码文档.md","localizedDate":"2024年6月3日","autoDesc":true}');export{I as comp,P as data};
